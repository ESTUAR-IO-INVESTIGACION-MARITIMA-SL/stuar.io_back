package stuar.io.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ZonaPuntoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertZonaPuntoAllPropertiesEquals(ZonaPunto expected, ZonaPunto actual) {
        assertZonaPuntoAutoGeneratedPropertiesEquals(expected, actual);
        assertZonaPuntoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertZonaPuntoAllUpdatablePropertiesEquals(ZonaPunto expected, ZonaPunto actual) {
        assertZonaPuntoUpdatableFieldsEquals(expected, actual);
        assertZonaPuntoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertZonaPuntoAutoGeneratedPropertiesEquals(ZonaPunto expected, ZonaPunto actual) {
        assertThat(expected)
            .as("Verify ZonaPunto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertZonaPuntoUpdatableFieldsEquals(ZonaPunto expected, ZonaPunto actual) {
        assertThat(expected)
            .as("Verify ZonaPunto relevant properties")
            .satisfies(e -> assertThat(e.getX()).as("check x").isEqualTo(actual.getX()))
            .satisfies(e -> assertThat(e.getY()).as("check y").isEqualTo(actual.getY()))
            .satisfies(e -> assertThat(e.getOrderIndex()).as("check orderIndex").isEqualTo(actual.getOrderIndex()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertZonaPuntoUpdatableRelationshipsEquals(ZonaPunto expected, ZonaPunto actual) {
        assertThat(expected)
            .as("Verify ZonaPunto relationships")
            .satisfies(e -> assertThat(e.getZona()).as("check zona").isEqualTo(actual.getZona()));
    }
}
