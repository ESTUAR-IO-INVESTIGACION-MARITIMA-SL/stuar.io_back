package stuar.io.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PoligonoPuntoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoPuntoAllPropertiesEquals(PoligonoPunto expected, PoligonoPunto actual) {
        assertPoligonoPuntoAutoGeneratedPropertiesEquals(expected, actual);
        assertPoligonoPuntoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoPuntoAllUpdatablePropertiesEquals(PoligonoPunto expected, PoligonoPunto actual) {
        assertPoligonoPuntoUpdatableFieldsEquals(expected, actual);
        assertPoligonoPuntoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoPuntoAutoGeneratedPropertiesEquals(PoligonoPunto expected, PoligonoPunto actual) {
        assertThat(expected)
            .as("Verify PoligonoPunto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoPuntoUpdatableFieldsEquals(PoligonoPunto expected, PoligonoPunto actual) {
        assertThat(expected)
            .as("Verify PoligonoPunto relevant properties")
            .satisfies(e -> assertThat(e.getX()).as("check x").isEqualTo(actual.getX()))
            .satisfies(e -> assertThat(e.getY()).as("check y").isEqualTo(actual.getY()))
            .satisfies(e -> assertThat(e.getOrderIndex()).as("check orderIndex").isEqualTo(actual.getOrderIndex()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoPuntoUpdatableRelationshipsEquals(PoligonoPunto expected, PoligonoPunto actual) {
        assertThat(expected)
            .as("Verify PoligonoPunto relationships")
            .satisfies(e -> assertThat(e.getPoligono()).as("check poligono").isEqualTo(actual.getPoligono()));
    }
}
