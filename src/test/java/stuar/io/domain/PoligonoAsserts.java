package stuar.io.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PoligonoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoAllPropertiesEquals(Poligono expected, Poligono actual) {
        assertPoligonoAutoGeneratedPropertiesEquals(expected, actual);
        assertPoligonoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoAllUpdatablePropertiesEquals(Poligono expected, Poligono actual) {
        assertPoligonoUpdatableFieldsEquals(expected, actual);
        assertPoligonoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoAutoGeneratedPropertiesEquals(Poligono expected, Poligono actual) {
        assertThat(expected)
            .as("Verify Poligono auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoUpdatableFieldsEquals(Poligono expected, Poligono actual) {
        assertThat(expected)
            .as("Verify Poligono relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPoligonoUpdatableRelationshipsEquals(Poligono expected, Poligono actual) {
        assertThat(expected)
            .as("Verify Poligono relationships")
            .satisfies(e -> assertThat(e.getZona()).as("check zona").isEqualTo(actual.getZona()));
    }
}
