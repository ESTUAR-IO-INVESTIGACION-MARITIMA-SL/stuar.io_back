package stuar.io.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BateaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBateaAllPropertiesEquals(Batea expected, Batea actual) {
        assertBateaAutoGeneratedPropertiesEquals(expected, actual);
        assertBateaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBateaAllUpdatablePropertiesEquals(Batea expected, Batea actual) {
        assertBateaUpdatableFieldsEquals(expected, actual);
        assertBateaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBateaAutoGeneratedPropertiesEquals(Batea expected, Batea actual) {
        assertThat(expected)
            .as("Verify Batea auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBateaUpdatableFieldsEquals(Batea expected, Batea actual) {
        assertThat(expected)
            .as("Verify Batea relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getOwnerName()).as("check ownerName").isEqualTo(actual.getOwnerName()))
            .satisfies(e -> assertThat(e.getX()).as("check x").isEqualTo(actual.getX()))
            .satisfies(e -> assertThat(e.getY()).as("check y").isEqualTo(actual.getY()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBateaUpdatableRelationshipsEquals(Batea expected, Batea actual) {
        assertThat(expected)
            .as("Verify Batea relationships")
            .satisfies(e -> assertThat(e.getPoligono()).as("check poligono").isEqualTo(actual.getPoligono()));
    }
}
